import{_ as e,o as a,c as s,Q as t}from"./chunks/framework.b637c96f.js";const v=JSON.parse('{"title":"grep命令","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/grep.md","filePath":"Linux/grep.md","lastUpdated":1694800248000}'),l={name:"Linux/grep.md"},p=t('<h1 id="grep命令" tabindex="-1">grep命令 <a class="header-anchor" href="#grep命令" aria-label="Permalink to &quot;grep命令&quot;">​</a></h1><blockquote><p><code>grep</code>是一个强大的命令行工具，用于在文本文件中搜索指定的模式。它可以帮助您快速定位和提取包含特定内容的行。</p></blockquote><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">grep [选项] 模式 文件...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">grep [选项] 模式 文件...</span></span></code></pre></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h3><ul><li><code>-i</code>：忽略大小写。</li><li><code>-v</code>：反转匹配，显示不包含模式的行。</li><li><code>-r</code>：递归搜索子目录中的文件。</li><li><code>-n</code>：显示匹配行的行号。</li><li><code>-l</code>：仅显示包含模式的文件名。</li><li><code>-w</code>：仅匹配完整的单词。</li><li><code>-c</code>：仅显示匹配的行数。</li><li><code>-A num</code>：显示匹配行及其后<code>num</code>行的内容。</li><li><code>-B num</code>：显示匹配行及其前<code>num</code>行的内容。</li><li><code>-C num</code>：显示匹配行及其前后各<code>num</code>行的内容。</li></ul><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><ol><li><p>在文件<code>file.txt</code>中搜索特定模式（例如，<code>pattern</code>）：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">grep pattern file.txt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">grep pattern file.txt</span></span></code></pre></div></li><li><p>在文件<code>file1.txt</code>和<code>file2.txt</code>中搜索特定模式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">grep pattern file1.txt file2.txt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">grep pattern file1.txt file2.txt</span></span></code></pre></div></li><li><p>在文件<code>file.txt</code>中搜索特定模式，并显示匹配行的行号：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">grep -n pattern file.txt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">grep -n pattern file.txt</span></span></code></pre></div></li><li><p>在文件<code>file.txt</code>中搜索特定模式，并显示匹配行及其后2行的内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">grep -A 2 pattern file.txt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">grep -A 2 pattern file.txt</span></span></code></pre></div></li><li><p>在目录及其子目录中的所有文件中递归搜索特定模式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">grep -r pattern directory</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">grep -r pattern directory</span></span></code></pre></div></li></ol>',8),o=[p];function c(i,n,d,r,h,g){return a(),s("div",null,o)}const b=e(l,[["render",c]]);export{v as __pageData,b as default};
