import{_ as a,o as t,c as e,Q as i}from"./chunks/framework.b637c96f.js";const r="/Git/代码提交/没有rebase分支图.png",o="/Git/代码提交/gitLog.png",l="/Git/代码提交/gitLog2.png",n="/Git/代码提交/gitPush.png",q=JSON.parse('{"title":"代码提交","description":"","frontmatter":{"title":"代码提交"},"headers":[],"relativePath":"Git/代码提交.md","filePath":"Git/代码提交.md","lastUpdated":1694660988000}'),s={name:"Git/代码提交.md"},g=i('<h1 id="代码提交-分支提交" tabindex="-1">代码提交（分支提交） <a class="header-anchor" href="#代码提交-分支提交" aria-label="Permalink to &quot;代码提交（分支提交）&quot;">​</a></h1><h2 id="代码提交步骤" tabindex="-1">代码提交步骤 <a class="header-anchor" href="#代码提交步骤" aria-label="Permalink to &quot;代码提交步骤&quot;">​</a></h2><h3 id="第一种" tabindex="-1">第一种 <a class="header-anchor" href="#第一种" aria-label="Permalink to &quot;第一种&quot;">​</a></h3><ol><li><p>git pull --rebase origin master</p></li><li><p>git add . (解决冲突后,将修改add)</p></li><li><p>git rebase –continue</p></li><li><p>git push origin 分支名</p></li></ol><h3 id="第二种" tabindex="-1">第二种 <a class="header-anchor" href="#第二种" aria-label="Permalink to &quot;第二种&quot;">​</a></h3><ol><li><p>master切换到分支：git fetch;git checkout &lt;分支名&gt;;</p></li><li><p>提交代码到分支： 一定要使用rebase操作，避免分支错乱；</p></li><li><p><strong>git status</strong>; 查看当前分支变更情况；</p></li><li><p><strong>git add .</strong> ; 将本地需要提交的代码提交到暂存区；</p></li><li><p><strong>git commit -m “初始化”</strong>; 将暂存区内容提交到本地仓库中；</p></li><li><p><strong>git fetch</strong>; 将运城仓库最新的内容更新到本地；</p></li><li><p><strong>git rebase origin/master</strong>; 将远程与本地代码进行合并，如果出现冲突则解决冲突，每解决一个文件的冲突要 git add 下，这时rebase会暂停，解决完冲突再继续rebase(git rebase --continue),直至rebase结束；</p></li><li><p><strong>git push origin &lt;分支名&gt;</strong>; 将本地仓库内容提交到远程仓库；</p></li></ol><h2 id="没有rebase-导致分支提交错误时-处理方法-谨慎使用" tabindex="-1">没有rebase 导致分支提交错误时，处理方法（谨慎使用） <a class="header-anchor" href="#没有rebase-导致分支提交错误时-处理方法-谨慎使用" aria-label="Permalink to &quot;没有rebase 导致分支提交错误时，处理方法（谨慎使用）&quot;">​</a></h2><p><img src="'+r+'" alt="" data-fancybox="gallery"></p><h3 id="_1-git-log-—oneline-10" tabindex="-1">1. git log —oneline -10 <a class="header-anchor" href="#_1-git-log-—oneline-10" aria-label="Permalink to &quot;1. git log —oneline -10&quot;">​</a></h3><p><img src="'+o+'" alt="" data-fancybox="gallery"></p><h3 id="_2-git-reset-—soft-历史文件名" tabindex="-1">2. git reset —soft &lt;历史文件名&gt; <a class="header-anchor" href="#_2-git-reset-—soft-历史文件名" aria-label="Permalink to &quot;2. git reset —soft &lt;历史文件名&gt;&quot;">​</a></h3><h3 id="_3-git-log-—oneline-10" tabindex="-1">3. git log —oneline -10 <a class="header-anchor" href="#_3-git-log-—oneline-10" aria-label="Permalink to &quot;3. git log —oneline -10&quot;">​</a></h3><p><img src="'+l+'" alt="" data-fancybox="gallery"></p><h3 id="_4-git-add" tabindex="-1">4. git add . <a class="header-anchor" href="#_4-git-add" aria-label="Permalink to &quot;4. git add .&quot;">​</a></h3><h3 id="_5-git-commit-m-备注" tabindex="-1">5. git commit -m &quot;备注&quot; <a class="header-anchor" href="#_5-git-commit-m-备注" aria-label="Permalink to &quot;5. git commit -m &quot;备注&quot;&quot;">​</a></h3><h3 id="_6-git-fetch" tabindex="-1">6. git fetch <a class="header-anchor" href="#_6-git-fetch" aria-label="Permalink to &quot;6. git fetch&quot;">​</a></h3><h3 id="_7-git-rebase-origin-master" tabindex="-1">7. git rebase origin/master <a class="header-anchor" href="#_7-git-rebase-origin-master" aria-label="Permalink to &quot;7. git rebase origin/master&quot;">​</a></h3><h3 id="_8-git-add-如果有冲突" tabindex="-1">8. git add . (如果有冲突) <a class="header-anchor" href="#_8-git-add-如果有冲突" aria-label="Permalink to &quot;8. git add .  (如果有冲突)&quot;">​</a></h3><h3 id="_9-git-rebase-—continue-如果有冲突" tabindex="-1">9. git rebase —continue (如果有冲突) <a class="header-anchor" href="#_9-git-rebase-—continue-如果有冲突" aria-label="Permalink to &quot;9. git rebase —continue   (如果有冲突)&quot;">​</a></h3><h3 id="_10-git-push-origin-master-f" tabindex="-1">10. git push origin master -f <a class="header-anchor" href="#_10-git-push-origin-master-f" aria-label="Permalink to &quot;10. git push origin master -f&quot;">​</a></h3><p><img src="'+n+'" alt="" data-fancybox="gallery"></p>',21),h=[g];function d(c,p,_,m,b,u){return t(),e("div",null,h)}const x=a(s,[["render",d]]);export{q as __pageData,x as default};
