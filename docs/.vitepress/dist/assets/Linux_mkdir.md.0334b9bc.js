import{_ as e,o as a,c as o,Q as s}from"./chunks/framework.b637c96f.js";const k=JSON.parse('{"title":"mkdir命令","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/mkdir.md","filePath":"Linux/mkdir.md","lastUpdated":1694800248000}'),d={name:"Linux/mkdir.md"},i=s('<h1 id="mkdir命令" tabindex="-1">mkdir命令 <a class="header-anchor" href="#mkdir命令" aria-label="Permalink to &quot;mkdir命令&quot;">​</a></h1><blockquote><p><code>mkdir</code>命令用于创建目录。可以指定目录的名称并选择性地设置目录的权限。</p></blockquote><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mkdir [选项] 目录...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mkdir [选项] 目录...</span></span></code></pre></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h3><ul><li><code>-m&lt;目标属性&gt;</code>或<code>--mode=&lt;目标属性&gt;</code>：在创建目录的同时设置目录的权限。可以使用八进制或符号表示法指定权限。</li><li><code>-p</code>或<code>--parents</code>：如果上层目录尚未创建，则一并创建上层目录。</li><li><code>-Z</code>：在使用SELinux时，设置安全上下文。</li><li><code>--version</code>：显示版本信息。</li></ul><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li>目录：指定要创建的目录列表，可以同时创建多个目录，各个目录之间用空格分隔。</li></ul><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><ol><li><p>在目录<code>/usr/meng</code>下创建子目录<code>test</code>，并且只有文件所有者有读、写和执行权限，其他用户无权访问。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mkdir -m 700 /usr/meng/test</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mkdir -m 700 /usr/meng/test</span></span></code></pre></div><p>在上述示例中，<code>-m 700</code>选项指定了目录的权限。数字<code>700</code>表示文件所有者有读、写和执行权限，而其他用户没有任何权限。</p></li><li><p>在当前目录中创建<code>bin</code>目录和<code>bin</code>下的<code>os_1</code>目录，权限设置为文件所有者可读、写、执行，同组用户可读和执行，其他用户无权访问。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mkdir -p -m 750 bin/os_1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mkdir -p -m 750 bin/os_1</span></span></code></pre></div><p>在上述示例中，<code>-p</code>选项用于递归创建上层目录，如果上层目录不存在的话。<code>-m 750</code>选项指定了目录的权限。数字<code>750</code>表示文件所有者有读、写和执行权限，同组用户有读和执行权限，其他用户没有任何权限。</p></li></ol><p><strong>注意，在创建文件时，最好将文件组织在合适的子目录中，以便更有效地管理和组织文件。可以使用一致的命名方式来区分文件和目录，并在子目录中包含相似类型或用途相近的文件。目录也是文件，它们遵循相同的命名规则，并且可以通过完整路径唯一地指定一个目录。</strong></p>',11),c=[i];function t(l,n,r,p,h,m){return a(),o("div",null,c)}const _=e(d,[["render",t]]);export{k as __pageData,_ as default};
